# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'yaogan.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(770, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(0, 0, 791, 561))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.frame = QtWidgets.QFrame(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout_2.addWidget(self.frame)
        self.frame_2 = QtWidgets.QFrame(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(15)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_2.addWidget(self.frame_2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 770, 18))
        self.menubar.setObjectName("menubar")
        self.menu_File = QtWidgets.QMenu(self.menubar)
        self.menu_File.setObjectName("menu_File")
        self.menu_ImageDisplay = QtWidgets.QMenu(self.menubar)
        self.menu_ImageDisplay.setObjectName("menu_ImageDisplay")
        self.menu_image_processing = QtWidgets.QMenu(self.menubar)
        self.menu_image_processing.setObjectName("menu_image_processing")
        self.menu_Image_enhancement = QtWidgets.QMenu(self.menu_image_processing)
        self.menu_Image_enhancement.setObjectName("menu_Image_enhancement")
        self.menu_Filtering = QtWidgets.QMenu(self.menu_image_processing)
        self.menu_Filtering.setObjectName("menu_Filtering")
        self.menu_ROI = QtWidgets.QMenu(self.menubar)
        self.menu_ROI.setObjectName("menu_ROI")
        self.menu_Creating_Vector = QtWidgets.QMenu(self.menu_ROI)
        self.menu_Creating_Vector.setObjectName("menu_Creating_Vector")
        self.menuClassification = QtWidgets.QMenu(self.menubar)
        self.menuClassification.setObjectName("menuClassification")
        self.menuSupervised_Classification = QtWidgets.QMenu(self.menuClassification)
        self.menuSupervised_Classification.setObjectName("menuSupervised_Classification")
        self.menuUnsupervised_Classification = QtWidgets.QMenu(self.menuClassification)
        self.menuUnsupervised_Classification.setObjectName("menuUnsupervised_Classification")
        self.menuClassification_Result_Processing = QtWidgets.QMenu(self.menuClassification)
        self.menuClassification_Result_Processing.setObjectName("menuClassification_Result_Processing")
        self.menuAccuracy_Evaluation = QtWidgets.QMenu(self.menubar)
        self.menuAccuracy_Evaluation.setObjectName("menuAccuracy_Evaluation")
        self.menuModel = QtWidgets.QMenu(self.menubar)
        self.menuModel.setObjectName("menuModel")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuFEature = QtWidgets.QMenu(self.menubar)
        self.menuFEature.setObjectName("menuFEature")
        self.menuSpectral_Indices = QtWidgets.QMenu(self.menuFEature)
        self.menuSpectral_Indices.setObjectName("menuSpectral_Indices")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpenImageFile = QtWidgets.QAction(MainWindow)
        self.actionOpenImageFile.setObjectName("actionOpenImageFile")
        self.actionOpenVectorData = QtWidgets.QAction(MainWindow)
        self.actionOpenVectorData.setObjectName("actionOpenVectorData")
        self.actionBandextraction = QtWidgets.QAction(MainWindow)
        self.actionBandextraction.setObjectName("actionBandextraction")
        self.actionviewingmetadata = QtWidgets.QAction(MainWindow)
        self.actionviewingmetadata.setObjectName("actionviewingmetadata")
        self.actionSaveImageFileAs = QtWidgets.QAction(MainWindow)
        self.actionSaveImageFileAs.setObjectName("actionSaveImageFileAs")
        self.actionSaveVectorFileAs = QtWidgets.QAction(MainWindow)
        self.actionSaveVectorFileAs.setObjectName("actionSaveVectorFileAs")
        self.actionBandsynthesis = QtWidgets.QAction(MainWindow)
        self.actionBandsynthesis.setObjectName("actionBandsynthesis")
        self.actionImageCutting = QtWidgets.QAction(MainWindow)
        self.actionImageCutting.setObjectName("actionImageCutting")
        self.actionProjection = QtWidgets.QAction(MainWindow)
        self.actionProjection.setObjectName("actionProjection")
        self.actionHistogram = QtWidgets.QAction(MainWindow)
        self.actionHistogram.setObjectName("actionHistogram")
        self.actionSpectral_characteristics = QtWidgets.QAction(MainWindow)
        self.actionSpectral_characteristics.setObjectName("actionSpectral_characteristics")
        self.actionImagestretching = QtWidgets.QAction(MainWindow)
        self.actionImagestretching.setObjectName("actionImagestretching")
        self.actionEqualize = QtWidgets.QAction(MainWindow)
        self.actionEqualize.setObjectName("actionEqualize")
        self.actionSmoothing = QtWidgets.QAction(MainWindow)
        self.actionSmoothing.setObjectName("actionSmoothing")
        self.actionSharpening = QtWidgets.QAction(MainWindow)
        self.actionSharpening.setObjectName("actionSharpening")
        self.actionEdgedetection = QtWidgets.QAction(MainWindow)
        self.actionEdgedetection.setObjectName("actionEdgedetection")
        self.actionBandMath = QtWidgets.QAction(MainWindow)
        self.actionBandMath.setObjectName("actionBandMath")
        self.actionCreatingROI = QtWidgets.QAction(MainWindow)
        self.actionCreatingROI.setObjectName("actionCreatingROI")
        self.actionSaveROIAs = QtWidgets.QAction(MainWindow)
        self.actionSaveROIAs.setObjectName("actionSaveROIAs")
        self.actionEditingROI = QtWidgets.QAction(MainWindow)
        self.actionEditingROI.setObjectName("actionEditingROI")
        self.actionPoint = QtWidgets.QAction(MainWindow)
        self.actionPoint.setObjectName("actionPoint")
        self.actionPolyline = QtWidgets.QAction(MainWindow)
        self.actionPolyline.setObjectName("actionPolyline")
        self.actionPolygon = QtWidgets.QAction(MainWindow)
        self.actionPolygon.setObjectName("actionPolygon")
        self.actionMaximum_Likelihood = QtWidgets.QAction(MainWindow)
        self.actionMaximum_Likelihood.setObjectName("actionMaximum_Likelihood")
        self.actionMinimum_Distance = QtWidgets.QAction(MainWindow)
        self.actionMinimum_Distance.setObjectName("actionMinimum_Distance")
        self.actionSVM = QtWidgets.QAction(MainWindow)
        self.actionSVM.setObjectName("actionSVM")
        self.actionDecision_Tree = QtWidgets.QAction(MainWindow)
        self.actionDecision_Tree.setObjectName("actionDecision_Tree")
        self.actionRandom_Forest = QtWidgets.QAction(MainWindow)
        self.actionRandom_Forest.setObjectName("actionRandom_Forest")
        self.actionK_means = QtWidgets.QAction(MainWindow)
        self.actionK_means.setObjectName("actionK_means")
        self.actionISODATA = QtWidgets.QAction(MainWindow)
        self.actionISODATA.setObjectName("actionISODATA")
        self.actionDeep_leraning_Classification = QtWidgets.QAction(MainWindow)
        self.actionDeep_leraning_Classification.setObjectName("actionDeep_leraning_Classification")
        self.actionSave_Model_As = QtWidgets.QAction(MainWindow)
        self.actionSave_Model_As.setObjectName("actionSave_Model_As")
        self.actionCustom_Color = QtWidgets.QAction(MainWindow)
        self.actionCustom_Color.setObjectName("actionCustom_Color")
        self.actionSmooth_Processing = QtWidgets.QAction(MainWindow)
        self.actionSmooth_Processing.setObjectName("actionSmooth_Processing")
        self.actionDenoising = QtWidgets.QAction(MainWindow)
        self.actionDenoising.setObjectName("actionDenoising")
        self.actionConfusion_Matrix = QtWidgets.QAction(MainWindow)
        self.actionConfusion_Matrix.setObjectName("actionConfusion_Matrix")
        self.actionOverall_Accuracy = QtWidgets.QAction(MainWindow)
        self.actionOverall_Accuracy.setObjectName("actionOverall_Accuracy")
        self.actionKappa = QtWidgets.QAction(MainWindow)
        self.actionKappa.setObjectName("actionKappa")
        self.actionVerify_Sample_Accuracy_Test = QtWidgets.QAction(MainWindow)
        self.actionVerify_Sample_Accuracy_Test.setObjectName("actionVerify_Sample_Accuracy_Test")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionGenerate_Accuracy_Evaluation_Table = QtWidgets.QAction(MainWindow)
        self.actionGenerate_Accuracy_Evaluation_Table.setObjectName("actionGenerate_Accuracy_Evaluation_Table")
        self.actionGenerating = QtWidgets.QAction(MainWindow)
        self.actionGenerating.setObjectName("actionGenerating")
        self.actionLanguage = QtWidgets.QAction(MainWindow)
        self.actionLanguage.setObjectName("actionLanguage")
        self.actionGuide = QtWidgets.QAction(MainWindow)
        self.actionGuide.setObjectName("actionGuide")
        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setObjectName("actionHelp")
        self.actionFeature_Extraction = QtWidgets.QAction(MainWindow)
        self.actionFeature_Extraction.setObjectName("actionFeature_Extraction")
        self.actionNDVI = QtWidgets.QAction(MainWindow)
        self.actionNDVI.setObjectName("actionNDVI")
        self.actionEVI = QtWidgets.QAction(MainWindow)
        self.actionEVI.setObjectName("actionEVI")
        self.actionMSAVI = QtWidgets.QAction(MainWindow)
        self.actionMSAVI.setObjectName("actionMSAVI")
        self.actionNDWI = QtWidgets.QAction(MainWindow)
        self.actionNDWI.setObjectName("actionNDWI")
        self.actionMNDWI = QtWidgets.QAction(MainWindow)
        self.actionMNDWI.setObjectName("actionMNDWI")
        self.actionNDBI = QtWidgets.QAction(MainWindow)
        self.actionNDBI.setObjectName("actionNDBI")
        self.actionBSI = QtWidgets.QAction(MainWindow)
        self.actionBSI.setObjectName("actionBSI")
        self.actionTexture_Features = QtWidgets.QAction(MainWindow)
        self.actionTexture_Features.setObjectName("actionTexture_Features")
        self.actionPCA_Transformation = QtWidgets.QAction(MainWindow)
        self.actionPCA_Transformation.setObjectName("actionPCA_Transformation")
        self.actionMorphological_Filteers = QtWidgets.QAction(MainWindow)
        self.actionMorphological_Filteers.setObjectName("actionMorphological_Filteers")
        self.actionPCA_Transformation_2 = QtWidgets.QAction(MainWindow)
        self.actionPCA_Transformation_2.setObjectName("actionPCA_Transformation_2")
        self.actionMorphological_Filteers_2 = QtWidgets.QAction(MainWindow)
        self.actionMorphological_Filteers_2.setObjectName("actionMorphological_Filteers_2")
        self.actionFeature_Sleection_Multi_scale = QtWidgets.QAction(MainWindow)
        self.actionFeature_Sleection_Multi_scale.setObjectName("actionFeature_Sleection_Multi_scale")
        self.actionFeature_Fusion_Context = QtWidgets.QAction(MainWindow)
        self.actionFeature_Fusion_Context.setObjectName("actionFeature_Fusion_Context")
        self.actionPCA_Transformation_3 = QtWidgets.QAction(MainWindow)
        self.actionPCA_Transformation_3.setObjectName("actionPCA_Transformation_3")
        self.actionMorphological_Filteers_3 = QtWidgets.QAction(MainWindow)
        self.actionMorphological_Filteers_3.setObjectName("actionMorphological_Filteers_3")
        self.actionFeature_Sleection_Multi_scale_2 = QtWidgets.QAction(MainWindow)
        self.actionFeature_Sleection_Multi_scale_2.setObjectName("actionFeature_Sleection_Multi_scale_2")
        self.actionFeature_Fusion_Context_2 = QtWidgets.QAction(MainWindow)
        self.actionFeature_Fusion_Context_2.setObjectName("actionFeature_Fusion_Context_2")
        self.actionPCA_Transformation_4 = QtWidgets.QAction(MainWindow)
        self.actionPCA_Transformation_4.setObjectName("actionPCA_Transformation_4")
        self.actionMorphological_Filteers_4 = QtWidgets.QAction(MainWindow)
        self.actionMorphological_Filteers_4.setObjectName("actionMorphological_Filteers_4")
        self.actionFeature_Sleection_Multi_scale_3 = QtWidgets.QAction(MainWindow)
        self.actionFeature_Sleection_Multi_scale_3.setObjectName("actionFeature_Sleection_Multi_scale_3")
        self.actionFeature_Fusion_Context_3 = QtWidgets.QAction(MainWindow)
        self.actionFeature_Fusion_Context_3.setObjectName("actionFeature_Fusion_Context_3")
        self.menu_File.addAction(self.actionOpenImageFile)
        self.menu_File.addAction(self.actionOpenVectorData)
        self.menu_File.addAction(self.actionSaveImageFileAs)
        self.menu_File.addAction(self.actionSaveVectorFileAs)
        self.menu_File.addAction(self.actionExit)
        self.menu_ImageDisplay.addAction(self.actionBandextraction)
        self.menu_ImageDisplay.addAction(self.actionviewingmetadata)
        self.menu_ImageDisplay.addAction(self.actionBandsynthesis)
        self.menu_ImageDisplay.addAction(self.actionImageCutting)
        self.menu_ImageDisplay.addAction(self.actionProjection)
        self.menu_ImageDisplay.addAction(self.actionHistogram)
        self.menu_ImageDisplay.addAction(self.actionSpectral_characteristics)
        self.menu_Image_enhancement.addAction(self.actionImagestretching)
        self.menu_Image_enhancement.addAction(self.actionEqualize)
        self.menu_Filtering.addAction(self.actionSmoothing)
        self.menu_Filtering.addAction(self.actionSharpening)
        self.menu_Filtering.addAction(self.actionEdgedetection)
        self.menu_image_processing.addAction(self.menu_Image_enhancement.menuAction())
        self.menu_image_processing.addAction(self.menu_Filtering.menuAction())
        self.menu_image_processing.addAction(self.actionBandMath)
        self.menu_Creating_Vector.addAction(self.actionPoint)
        self.menu_Creating_Vector.addAction(self.actionPolyline)
        self.menu_Creating_Vector.addAction(self.actionPolygon)
        self.menu_ROI.addAction(self.actionCreatingROI)
        self.menu_ROI.addAction(self.actionSaveROIAs)
        self.menu_ROI.addAction(self.actionEditingROI)
        self.menu_ROI.addAction(self.menu_Creating_Vector.menuAction())
        self.menuSupervised_Classification.addAction(self.actionMaximum_Likelihood)
        self.menuSupervised_Classification.addAction(self.actionMinimum_Distance)
        self.menuSupervised_Classification.addAction(self.actionSVM)
        self.menuSupervised_Classification.addAction(self.actionDecision_Tree)
        self.menuSupervised_Classification.addAction(self.actionRandom_Forest)
        self.menuUnsupervised_Classification.addAction(self.actionK_means)
        self.menuUnsupervised_Classification.addAction(self.actionISODATA)
        self.menuClassification_Result_Processing.addAction(self.actionCustom_Color)
        self.menuClassification_Result_Processing.addAction(self.actionSmooth_Processing)
        self.menuClassification_Result_Processing.addAction(self.actionDenoising)
        self.menuClassification.addAction(self.menuSupervised_Classification.menuAction())
        self.menuClassification.addAction(self.menuUnsupervised_Classification.menuAction())
        self.menuClassification.addAction(self.actionDeep_leraning_Classification)
        self.menuClassification.addAction(self.actionSave_Model_As)
        self.menuClassification.addAction(self.menuClassification_Result_Processing.menuAction())
        self.menuClassification.addAction(self.actionGenerating)
        self.menuAccuracy_Evaluation.addAction(self.actionConfusion_Matrix)
        self.menuAccuracy_Evaluation.addAction(self.actionOverall_Accuracy)
        self.menuAccuracy_Evaluation.addAction(self.actionKappa)
        self.menuAccuracy_Evaluation.addAction(self.actionVerify_Sample_Accuracy_Test)
        self.menuAccuracy_Evaluation.addAction(self.actionGenerate_Accuracy_Evaluation_Table)
        self.menuHelp.addAction(self.actionLanguage)
        self.menuHelp.addAction(self.actionGuide)
        self.menuHelp.addAction(self.actionHelp)
        self.menuSpectral_Indices.addSeparator()
        self.menuSpectral_Indices.addAction(self.actionNDVI)
        self.menuSpectral_Indices.addAction(self.actionEVI)
        self.menuSpectral_Indices.addAction(self.actionMSAVI)
        self.menuSpectral_Indices.addAction(self.actionNDWI)
        self.menuSpectral_Indices.addAction(self.actionMNDWI)
        self.menuSpectral_Indices.addAction(self.actionNDBI)
        self.menuSpectral_Indices.addAction(self.actionBSI)
        self.menuFEature.addAction(self.actionFeature_Extraction)
        self.menuFEature.addAction(self.menuSpectral_Indices.menuAction())
        self.menuFEature.addAction(self.actionTexture_Features)
        self.menuFEature.addAction(self.actionPCA_Transformation_4)
        self.menuFEature.addAction(self.actionMorphological_Filteers_4)
        self.menuFEature.addAction(self.actionFeature_Sleection_Multi_scale_3)
        self.menuFEature.addAction(self.actionFeature_Fusion_Context_3)
        self.menubar.addAction(self.menu_File.menuAction())
        self.menubar.addAction(self.menu_ImageDisplay.menuAction())
        self.menubar.addAction(self.menu_image_processing.menuAction())
        self.menubar.addAction(self.menuFEature.menuAction())
        self.menubar.addAction(self.menu_ROI.menuAction())
        self.menubar.addAction(self.menuClassification.menuAction())
        self.menubar.addAction(self.menuAccuracy_Evaluation.menuAction())
        self.menubar.addAction(self.menuModel.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.menu_File.setTitle(_translate("MainWindow", "File"))
        self.menu_ImageDisplay.setTitle(_translate("MainWindow", "Image display"))
        self.menu_image_processing.setTitle(_translate("MainWindow", "Image processing"))
        self.menu_Image_enhancement.setTitle(_translate("MainWindow", "Image enhancement"))
        self.menu_Filtering.setTitle(_translate("MainWindow", "Filtering"))
        self.menu_ROI.setTitle(_translate("MainWindow", "Vector"))
        self.menu_Creating_Vector.setTitle(_translate("MainWindow", "Creating Vector"))
        self.menuClassification.setTitle(_translate("MainWindow", "Classification"))
        self.menuSupervised_Classification.setTitle(_translate("MainWindow", "Supervised Classification"))
        self.menuUnsupervised_Classification.setTitle(_translate("MainWindow", "Unsupervised Classification"))
        self.menuClassification_Result_Processing.setTitle(_translate("MainWindow", "Classification Result Processing"))
        self.menuAccuracy_Evaluation.setTitle(_translate("MainWindow", "Accuracy Evaluation"))
        self.menuModel.setTitle(_translate("MainWindow", "Model"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuFEature.setTitle(_translate("MainWindow", "Feature"))
        self.menuSpectral_Indices.setTitle(_translate("MainWindow", "Spectral Indices"))
        self.actionOpenImageFile.setText(_translate("MainWindow", "Open Image File"))
        self.actionOpenVectorData.setText(_translate("MainWindow", "Open vector data"))
        self.actionBandextraction.setText(_translate("MainWindow", "Band extraction"))
        self.actionviewingmetadata.setText(_translate("MainWindow", "viewing metadata"))
        self.actionSaveImageFileAs.setText(_translate("MainWindow", "Save Image File As"))
        self.actionSaveVectorFileAs.setText(_translate("MainWindow", "Save Vector File As"))
        self.actionBandsynthesis.setText(_translate("MainWindow", "Band synthesis"))
        self.actionImageCutting.setText(_translate("MainWindow", "Image Cutting"))
        self.actionProjection.setText(_translate("MainWindow", "Projection"))
        self.actionHistogram.setText(_translate("MainWindow", "Histogram"))
        self.actionSpectral_characteristics.setText(_translate("MainWindow", "Spectral characteristics"))
        self.actionImagestretching.setText(_translate("MainWindow", "Image stretching"))
        self.actionEqualize.setText(_translate("MainWindow", "Equalize"))
        self.actionSmoothing.setText(_translate("MainWindow", "Smoothing"))
        self.actionSharpening.setText(_translate("MainWindow", "Sharpening"))
        self.actionEdgedetection.setText(_translate("MainWindow", "Edge detection"))
        self.actionBandMath.setText(_translate("MainWindow", "Band Math"))
        self.actionCreatingROI.setText(_translate("MainWindow", "Creating ROI"))
        self.actionSaveROIAs.setText(_translate("MainWindow", "Save ROI As"))
        self.actionEditingROI.setText(_translate("MainWindow", "Editing ROI"))
        self.actionPoint.setText(_translate("MainWindow", "Point"))
        self.actionPolyline.setText(_translate("MainWindow", "Polyline"))
        self.actionPolygon.setText(_translate("MainWindow", "Polygon"))
        self.actionMaximum_Likelihood.setText(_translate("MainWindow", "Maximum Likelihood"))
        self.actionMinimum_Distance.setText(_translate("MainWindow", "Minimum Distance"))
        self.actionSVM.setText(_translate("MainWindow", "SVM"))
        self.actionDecision_Tree.setText(_translate("MainWindow", "Decision Tree"))
        self.actionRandom_Forest.setText(_translate("MainWindow", "Random Forest"))
        self.actionK_means.setText(_translate("MainWindow", "K-means"))
        self.actionISODATA.setText(_translate("MainWindow", "ISODATA"))
        self.actionDeep_leraning_Classification.setText(_translate("MainWindow", "Deep-leraning Classification"))
        self.actionSave_Model_As.setText(_translate("MainWindow", "Save Model As"))
        self.actionCustom_Color.setText(_translate("MainWindow", "Custom Color"))
        self.actionSmooth_Processing.setText(_translate("MainWindow", "Smooth Processing"))
        self.actionDenoising.setText(_translate("MainWindow", "Denoising"))
        self.actionConfusion_Matrix.setText(_translate("MainWindow", "Confusion Matrix"))
        self.actionOverall_Accuracy.setText(_translate("MainWindow", "Overall Accuracy"))
        self.actionKappa.setText(_translate("MainWindow", "Kappa"))
        self.actionVerify_Sample_Accuracy_Test.setText(_translate("MainWindow", "Verifing Sample Accuracy Test"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionGenerate_Accuracy_Evaluation_Table.setText(_translate("MainWindow", "Generating Accuracy Evaluation Table"))
        self.actionGenerating.setText(_translate("MainWindow", "Generating Classification Report"))
        self.actionLanguage.setText(_translate("MainWindow", "Language"))
        self.actionGuide.setText(_translate("MainWindow", "Guide"))
        self.actionHelp.setText(_translate("MainWindow", "About This App"))
        self.actionFeature_Extraction.setText(_translate("MainWindow", "Feature Extraction"))
        self.actionNDVI.setText(_translate("MainWindow", "NDVI"))
        self.actionEVI.setText(_translate("MainWindow", "EVI"))
        self.actionMSAVI.setText(_translate("MainWindow", "MSAVI"))
        self.actionNDWI.setText(_translate("MainWindow", "NDWI"))
        self.actionMNDWI.setText(_translate("MainWindow", "MNDWI"))
        self.actionNDBI.setText(_translate("MainWindow", "NDBI"))
        self.actionBSI.setText(_translate("MainWindow", "BSI"))
        self.actionTexture_Features.setText(_translate("MainWindow", "Texture Features"))
        self.actionPCA_Transformation.setText(_translate("MainWindow", "PCA Transformation"))
        self.actionMorphological_Filteers.setText(_translate("MainWindow", "Morphological Filteers"))
        self.actionPCA_Transformation_2.setText(_translate("MainWindow", "PCA Transformation"))
        self.actionMorphological_Filteers_2.setText(_translate("MainWindow", "Morphological Filteers"))
        self.actionFeature_Sleection_Multi_scale.setText(_translate("MainWindow", "Feature Sleection&Multi-scale"))
        self.actionFeature_Fusion_Context.setText(_translate("MainWindow", "Feature Fusion&Context"))
        self.actionPCA_Transformation_3.setText(_translate("MainWindow", "PCA Transformation"))
        self.actionMorphological_Filteers_3.setText(_translate("MainWindow", "Morphological Filteers"))
        self.actionFeature_Sleection_Multi_scale_2.setText(_translate("MainWindow", "Feature Sleection&Multi-scale"))
        self.actionFeature_Fusion_Context_2.setText(_translate("MainWindow", "Feature Fusion&Context"))
        self.actionPCA_Transformation_4.setText(_translate("MainWindow", "PCA Transformation"))
        self.actionMorphological_Filteers_4.setText(_translate("MainWindow", "Morphological Filteers"))
        self.actionFeature_Sleection_Multi_scale_3.setText(_translate("MainWindow", "Feature Sleection&Multi-scale"))
        self.actionFeature_Fusion_Context_3.setText(_translate("MainWindow", "Feature Fusion&Context"))
